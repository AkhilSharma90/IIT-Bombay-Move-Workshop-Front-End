{"ast":null,"code":"// src/WalletCore.ts\nimport { HexString } from \"aptos\";\nimport EventEmitter from \"eventemitter3\";\nimport nacl from \"tweetnacl\";\nimport { Buffer } from \"buffer\";\n\n// src/constants.ts\nvar WalletReadyState = /* @__PURE__ */(WalletReadyState2 => {\n  WalletReadyState2[\"Installed\"] = \"Installed\";\n  WalletReadyState2[\"NotDetected\"] = \"NotDetected\";\n  WalletReadyState2[\"Loadable\"] = \"Loadable\";\n  WalletReadyState2[\"Unsupported\"] = \"Unsupported\";\n  return WalletReadyState2;\n})(WalletReadyState || {});\nvar NetworkName = /* @__PURE__ */(NetworkName2 => {\n  NetworkName2[\"Mainnet\"] = \"mainnet\";\n  NetworkName2[\"Testnet\"] = \"testnet\";\n  NetworkName2[\"Devnet\"] = \"devnet\";\n  return NetworkName2;\n})(NetworkName || {});\n\n// src/error/index.ts\nvar WalletError = class extends Error {\n  constructor(message, error) {\n    super(message);\n    this.error = error;\n  }\n};\nvar WalletNotSelectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSelectedError\";\n  }\n};\nvar WalletNotReadyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotReadyError\";\n  }\n};\nvar WalletConnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletConnectionError\";\n  }\n};\nvar WalletDisconnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletDisconnectionError\";\n  }\n};\nvar WalletAccountError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountError\";\n  }\n};\nvar WalletGetNetworkError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletGetNetworkError\";\n  }\n};\nvar WalletAccountChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountChangeError\";\n  }\n};\nvar WalletNetworkChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNetworkChangeError\";\n  }\n};\nvar WalletNotConnectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotConnectedError\";\n  }\n};\nvar WalletSignMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageError\";\n  }\n};\nvar WalletSignMessageAndVerifyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageAndVerifyError\";\n  }\n};\nvar WalletSignAndSubmitMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignAndSubmitMessageError\";\n  }\n};\nvar WalletSignTransactionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignTransactionError\";\n  }\n};\nvar WalletNotSupportedMethod = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSupportedMethod\";\n  }\n};\n\n// src/utils/scopePollingDetectionStrategy.ts\nfunction scopePollingDetectionStrategy(detect) {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\") return;\n  const disposers = [];\n  function detectAndDispose() {\n    const detected = detect();\n    if (detected) {\n      for (const dispose of disposers) {\n        dispose();\n      }\n    }\n  }\n  const interval = setInterval(detectAndDispose, 1e3);\n  disposers.push(() => clearInterval(interval));\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", detectAndDispose, {\n      once: true\n    });\n    disposers.push(() => document.removeEventListener(\"DOMContentLoaded\", detectAndDispose));\n  }\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", detectAndDispose, {\n      once: true\n    });\n    disposers.push(() => window.removeEventListener(\"load\", detectAndDispose));\n  }\n  detectAndDispose();\n}\n\n// src/utils/localStorage.ts\nvar LOCAL_STORAGE_ITEM_KEY = \"AptosWalletName\";\nfunction setLocalStorage(walletName) {\n  localStorage.setItem(LOCAL_STORAGE_ITEM_KEY, walletName);\n}\nfunction removeLocalStorage() {\n  localStorage.removeItem(LOCAL_STORAGE_ITEM_KEY);\n}\n\n// src/WalletCore.ts\nvar WalletCore = class extends EventEmitter {\n  constructor(plugins) {\n    super();\n    this._wallets = [];\n    this._wallet = null;\n    this._account = null;\n    this._network = null;\n    this._connecting = false;\n    this._connected = false;\n    this._wallets = plugins;\n    this.scopePollingDetectionStrategy();\n  }\n  scopePollingDetectionStrategy() {\n    var _a;\n    (_a = this._wallets) == null ? void 0 : _a.forEach(wallet => {\n      if (!wallet.readyState) {\n        wallet.readyState = typeof window === \"undefined\" || typeof document === \"undefined\" ? \"Unsupported\" /* Unsupported */ : \"NotDetected\" /* NotDetected */;\n      }\n\n      if (typeof window !== \"undefined\") {\n        scopePollingDetectionStrategy(() => {\n          const providerName = wallet.providerName || wallet.name.toLowerCase();\n          if (Object.keys(window).includes(providerName)) {\n            wallet.readyState = \"Installed\" /* Installed */;\n            wallet.provider = window[providerName];\n            this.emit(\"readyStateChange\", wallet);\n            return true;\n          }\n          return false;\n        });\n      }\n    });\n  }\n  doesWalletExist() {\n    if (!this._connected || this._connecting || !this._wallet) throw new WalletNotConnectedError().name;\n    if (!(this._wallet.readyState === \"Loadable\" /* Loadable */ || this._wallet.readyState === \"Installed\" /* Installed */)) throw new WalletNotReadyError().name;\n    return true;\n  }\n  clearData() {\n    this._connected = false;\n    this.setWallet(null);\n    this.setAccount(null);\n    this.setNetwork(null);\n    removeLocalStorage();\n  }\n  setWallet(wallet) {\n    this._wallet = wallet;\n  }\n  setAccount(account) {\n    this._account = account;\n  }\n  setNetwork(network) {\n    this._network = network;\n  }\n  isConnected() {\n    return this._connected;\n  }\n  get wallets() {\n    return this._wallets;\n  }\n  get wallet() {\n    try {\n      if (!this._wallet) return null;\n      return {\n        name: this._wallet.name,\n        icon: this._wallet.icon,\n        url: this._wallet.url\n      };\n    } catch (error) {\n      throw new WalletNotSelectedError(error).message;\n    }\n  }\n  get account() {\n    try {\n      return this._account;\n    } catch (error) {\n      throw new WalletAccountError(error).message;\n    }\n  }\n  get network() {\n    try {\n      return this._network;\n    } catch (error) {\n      throw new WalletGetNetworkError(error).message;\n    }\n  }\n  async connect(walletName) {\n    var _a;\n    try {\n      const selectedWallet = (_a = this._wallets) == null ? void 0 : _a.find(wallet => wallet.name === walletName);\n      if (!selectedWallet || selectedWallet.readyState !== \"Installed\" /* Installed */ && selectedWallet.readyState !== \"Loadable\" /* Loadable */) {\n        return;\n      }\n      if (this._connected) {\n        await this.disconnect();\n      }\n      this._connecting = true;\n      this.setWallet(selectedWallet);\n      const account = await selectedWallet.connect();\n      this.setAccount({\n        ...account\n      });\n      const network = await selectedWallet.network();\n      this.setNetwork({\n        ...network\n      });\n      setLocalStorage(selectedWallet.name);\n      this._connected = true;\n      this.emit(\"connect\", account);\n    } catch (error) {\n      this.clearData();\n      throw new WalletConnectionError(error).message;\n    } finally {\n      this._connecting = false;\n    }\n  }\n  async disconnect() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.disconnect());\n      this.clearData();\n      this.emit(\"disconnect\");\n    } catch (error) {\n      throw new WalletDisconnectionError(error).message;\n    }\n  }\n  async signAndSubmitTransaction(transaction) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signAndSubmitTransaction(transaction));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignAndSubmitMessageError(errMsg).message;\n    }\n  }\n  async signTransaction(transaction) {\n    var _a;\n    if (this._wallet && !(\"signTransaction\" in this._wallet)) {\n      throw new WalletNotSupportedMethod(`Sign Transaction is not supported by ${(_a = this.wallet) == null ? void 0 : _a.name}`).message;\n    }\n    try {\n      this.doesWalletExist();\n      const response = await this._wallet.signTransaction(transaction);\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignTransactionError(errMsg).message;\n    }\n  }\n  async signMessage(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._wallet) return null;\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageError(errMsg).message;\n    }\n  }\n  async onAccountChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onAccountChange(data => {\n        this.setAccount({\n          ...data\n        });\n        this.emit(\"accountChange\", this._account);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletAccountChangeError(errMsg).message;\n    }\n  }\n  async onNetworkChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onNetworkChange(data => {\n        this.setNetwork({\n          ...data\n        });\n        this.emit(\"networkChange\", this._network);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletNetworkChangeError(errMsg).message;\n    }\n  }\n  async signMessageAndVerify(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._account) throw new Error(\"No account found!\");\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      if (!response) throw new WalletSignMessageAndVerifyError(\"Failed to sign a message\").message;\n      let verified = false;\n      if (Array.isArray(response.signature)) {\n        const {\n          fullMessage,\n          signature,\n          bitmap\n        } = response;\n        if (bitmap) {\n          const minKeysRequired = this._account.minKeysRequired;\n          if (signature.length < minKeysRequired) {\n            verified = false;\n          } else {\n            const bits = Array.from(bitmap).flatMap(n => Array.from({\n              length: 8\n            }).map((_, i) => n >> i & 1));\n            const index = bits.map((_, i) => i).filter(i => bits[i]);\n            const publicKeys = this._account.publicKey;\n            const matchedPublicKeys = publicKeys.filter((_, i) => index.includes(i));\n            verified = true;\n            for (let i = 0; i < signature.length; i++) {\n              const isSigVerified = nacl.sign.detached.verify(Buffer.from(fullMessage), Buffer.from(signature[i], \"hex\"), Buffer.from(matchedPublicKeys[i], \"hex\"));\n              if (!isSigVerified) {\n                verified = false;\n                break;\n              }\n            }\n          }\n        } else {\n          throw new WalletSignMessageAndVerifyError(\"Failed to get a bitmap\").message;\n        }\n      } else {\n        const currentAccountPublicKey = new HexString(this._account.publicKey);\n        const signature = new HexString(response.signature);\n        verified = nacl.sign.detached.verify(Buffer.from(response.fullMessage), Buffer.from(signature.noPrefix(), \"hex\"), Buffer.from(currentAccountPublicKey.noPrefix(), \"hex\"));\n      }\n      return verified;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageAndVerifyError(errMsg).message;\n    }\n  }\n};\nexport { NetworkName, WalletCore, WalletReadyState };","map":{"version":3,"names":["HexString","EventEmitter","nacl","Buffer","WalletReadyState","WalletReadyState2","NetworkName","NetworkName2","WalletError","Error","constructor","message","error","WalletNotSelectedError","arguments","name","WalletNotReadyError","WalletConnectionError","WalletDisconnectionError","WalletAccountError","WalletGetNetworkError","WalletAccountChangeError","WalletNetworkChangeError","WalletNotConnectedError","WalletSignMessageError","WalletSignMessageAndVerifyError","WalletSignAndSubmitMessageError","WalletSignTransactionError","WalletNotSupportedMethod","scopePollingDetectionStrategy","detect","window","document","disposers","detectAndDispose","detected","dispose","interval","setInterval","push","clearInterval","readyState","addEventListener","once","removeEventListener","LOCAL_STORAGE_ITEM_KEY","setLocalStorage","walletName","localStorage","setItem","removeLocalStorage","removeItem","WalletCore","plugins","_wallets","_wallet","_account","_network","_connecting","_connected","_a","forEach","wallet","providerName","toLowerCase","Object","keys","includes","provider","emit","doesWalletExist","clearData","setWallet","setAccount","setNetwork","account","network","isConnected","wallets","icon","url","connect","selectedWallet","find","disconnect","signAndSubmitTransaction","transaction","response","errMsg","signTransaction","signMessage","onAccountChange","data","onNetworkChange","signMessageAndVerify","verified","Array","isArray","signature","fullMessage","bitmap","minKeysRequired","length","bits","from","flatMap","n","map","_","i","index","filter","publicKeys","publicKey","matchedPublicKeys","isSigVerified","sign","detached","verify","currentAccountPublicKey","noPrefix"],"sources":["/home/akhil/aptos-stuff/vibs/aptos-todo/client/node_modules/@aptos-labs/wallet-adapter-core/dist/index.mjs"],"sourcesContent":["// src/WalletCore.ts\nimport { HexString } from \"aptos\";\nimport EventEmitter from \"eventemitter3\";\nimport nacl from \"tweetnacl\";\nimport { Buffer } from \"buffer\";\n\n// src/constants.ts\nvar WalletReadyState = /* @__PURE__ */ ((WalletReadyState2) => {\n  WalletReadyState2[\"Installed\"] = \"Installed\";\n  WalletReadyState2[\"NotDetected\"] = \"NotDetected\";\n  WalletReadyState2[\"Loadable\"] = \"Loadable\";\n  WalletReadyState2[\"Unsupported\"] = \"Unsupported\";\n  return WalletReadyState2;\n})(WalletReadyState || {});\nvar NetworkName = /* @__PURE__ */ ((NetworkName2) => {\n  NetworkName2[\"Mainnet\"] = \"mainnet\";\n  NetworkName2[\"Testnet\"] = \"testnet\";\n  NetworkName2[\"Devnet\"] = \"devnet\";\n  return NetworkName2;\n})(NetworkName || {});\n\n// src/error/index.ts\nvar WalletError = class extends Error {\n  constructor(message, error) {\n    super(message);\n    this.error = error;\n  }\n};\nvar WalletNotSelectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSelectedError\";\n  }\n};\nvar WalletNotReadyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotReadyError\";\n  }\n};\nvar WalletConnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletConnectionError\";\n  }\n};\nvar WalletDisconnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletDisconnectionError\";\n  }\n};\nvar WalletAccountError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountError\";\n  }\n};\nvar WalletGetNetworkError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletGetNetworkError\";\n  }\n};\nvar WalletAccountChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountChangeError\";\n  }\n};\nvar WalletNetworkChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNetworkChangeError\";\n  }\n};\nvar WalletNotConnectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotConnectedError\";\n  }\n};\nvar WalletSignMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageError\";\n  }\n};\nvar WalletSignMessageAndVerifyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageAndVerifyError\";\n  }\n};\nvar WalletSignAndSubmitMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignAndSubmitMessageError\";\n  }\n};\nvar WalletSignTransactionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignTransactionError\";\n  }\n};\nvar WalletNotSupportedMethod = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSupportedMethod\";\n  }\n};\n\n// src/utils/scopePollingDetectionStrategy.ts\nfunction scopePollingDetectionStrategy(detect) {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\")\n    return;\n  const disposers = [];\n  function detectAndDispose() {\n    const detected = detect();\n    if (detected) {\n      for (const dispose of disposers) {\n        dispose();\n      }\n    }\n  }\n  const interval = setInterval(detectAndDispose, 1e3);\n  disposers.push(() => clearInterval(interval));\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", detectAndDispose, {\n      once: true\n    });\n    disposers.push(\n      () => document.removeEventListener(\"DOMContentLoaded\", detectAndDispose)\n    );\n  }\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", detectAndDispose, { once: true });\n    disposers.push(() => window.removeEventListener(\"load\", detectAndDispose));\n  }\n  detectAndDispose();\n}\n\n// src/utils/localStorage.ts\nvar LOCAL_STORAGE_ITEM_KEY = \"AptosWalletName\";\nfunction setLocalStorage(walletName) {\n  localStorage.setItem(LOCAL_STORAGE_ITEM_KEY, walletName);\n}\nfunction removeLocalStorage() {\n  localStorage.removeItem(LOCAL_STORAGE_ITEM_KEY);\n}\n\n// src/WalletCore.ts\nvar WalletCore = class extends EventEmitter {\n  constructor(plugins) {\n    super();\n    this._wallets = [];\n    this._wallet = null;\n    this._account = null;\n    this._network = null;\n    this._connecting = false;\n    this._connected = false;\n    this._wallets = plugins;\n    this.scopePollingDetectionStrategy();\n  }\n  scopePollingDetectionStrategy() {\n    var _a;\n    (_a = this._wallets) == null ? void 0 : _a.forEach((wallet) => {\n      if (!wallet.readyState) {\n        wallet.readyState = typeof window === \"undefined\" || typeof document === \"undefined\" ? \"Unsupported\" /* Unsupported */ : \"NotDetected\" /* NotDetected */;\n      }\n      if (typeof window !== \"undefined\") {\n        scopePollingDetectionStrategy(() => {\n          const providerName = wallet.providerName || wallet.name.toLowerCase();\n          if (Object.keys(window).includes(providerName)) {\n            wallet.readyState = \"Installed\" /* Installed */;\n            wallet.provider = window[providerName];\n            this.emit(\"readyStateChange\", wallet);\n            return true;\n          }\n          return false;\n        });\n      }\n    });\n  }\n  doesWalletExist() {\n    if (!this._connected || this._connecting || !this._wallet)\n      throw new WalletNotConnectedError().name;\n    if (!(this._wallet.readyState === \"Loadable\" /* Loadable */ || this._wallet.readyState === \"Installed\" /* Installed */))\n      throw new WalletNotReadyError().name;\n    return true;\n  }\n  clearData() {\n    this._connected = false;\n    this.setWallet(null);\n    this.setAccount(null);\n    this.setNetwork(null);\n    removeLocalStorage();\n  }\n  setWallet(wallet) {\n    this._wallet = wallet;\n  }\n  setAccount(account) {\n    this._account = account;\n  }\n  setNetwork(network) {\n    this._network = network;\n  }\n  isConnected() {\n    return this._connected;\n  }\n  get wallets() {\n    return this._wallets;\n  }\n  get wallet() {\n    try {\n      if (!this._wallet)\n        return null;\n      return {\n        name: this._wallet.name,\n        icon: this._wallet.icon,\n        url: this._wallet.url\n      };\n    } catch (error) {\n      throw new WalletNotSelectedError(error).message;\n    }\n  }\n  get account() {\n    try {\n      return this._account;\n    } catch (error) {\n      throw new WalletAccountError(error).message;\n    }\n  }\n  get network() {\n    try {\n      return this._network;\n    } catch (error) {\n      throw new WalletGetNetworkError(error).message;\n    }\n  }\n  async connect(walletName) {\n    var _a;\n    try {\n      const selectedWallet = (_a = this._wallets) == null ? void 0 : _a.find(\n        (wallet) => wallet.name === walletName\n      );\n      if (!selectedWallet || selectedWallet.readyState !== \"Installed\" /* Installed */ && selectedWallet.readyState !== \"Loadable\" /* Loadable */) {\n        return;\n      }\n      if (this._connected) {\n        await this.disconnect();\n      }\n      this._connecting = true;\n      this.setWallet(selectedWallet);\n      const account = await selectedWallet.connect();\n      this.setAccount({ ...account });\n      const network = await selectedWallet.network();\n      this.setNetwork({ ...network });\n      setLocalStorage(selectedWallet.name);\n      this._connected = true;\n      this.emit(\"connect\", account);\n    } catch (error) {\n      this.clearData();\n      throw new WalletConnectionError(error).message;\n    } finally {\n      this._connecting = false;\n    }\n  }\n  async disconnect() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.disconnect());\n      this.clearData();\n      this.emit(\"disconnect\");\n    } catch (error) {\n      throw new WalletDisconnectionError(error).message;\n    }\n  }\n  async signAndSubmitTransaction(transaction) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signAndSubmitTransaction(\n        transaction\n      ));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignAndSubmitMessageError(errMsg).message;\n    }\n  }\n  async signTransaction(transaction) {\n    var _a;\n    if (this._wallet && !(\"signTransaction\" in this._wallet)) {\n      throw new WalletNotSupportedMethod(\n        `Sign Transaction is not supported by ${(_a = this.wallet) == null ? void 0 : _a.name}`\n      ).message;\n    }\n    try {\n      this.doesWalletExist();\n      const response = await this._wallet.signTransaction(transaction);\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignTransactionError(errMsg).message;\n    }\n  }\n  async signMessage(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._wallet)\n        return null;\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageError(errMsg).message;\n    }\n  }\n  async onAccountChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onAccountChange((data) => {\n        this.setAccount({ ...data });\n        this.emit(\"accountChange\", this._account);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletAccountChangeError(errMsg).message;\n    }\n  }\n  async onNetworkChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onNetworkChange((data) => {\n        this.setNetwork({ ...data });\n        this.emit(\"networkChange\", this._network);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletNetworkChangeError(errMsg).message;\n    }\n  }\n  async signMessageAndVerify(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._account)\n        throw new Error(\"No account found!\");\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      if (!response)\n        throw new WalletSignMessageAndVerifyError(\"Failed to sign a message\").message;\n      let verified = false;\n      if (Array.isArray(response.signature)) {\n        const { fullMessage, signature, bitmap } = response;\n        if (bitmap) {\n          const minKeysRequired = this._account.minKeysRequired;\n          if (signature.length < minKeysRequired) {\n            verified = false;\n          } else {\n            const bits = Array.from(bitmap).flatMap(\n              (n) => Array.from({ length: 8 }).map((_, i) => n >> i & 1)\n            );\n            const index = bits.map((_, i) => i).filter((i) => bits[i]);\n            const publicKeys = this._account.publicKey;\n            const matchedPublicKeys = publicKeys.filter(\n              (_, i) => index.includes(i)\n            );\n            verified = true;\n            for (let i = 0; i < signature.length; i++) {\n              const isSigVerified = nacl.sign.detached.verify(\n                Buffer.from(fullMessage),\n                Buffer.from(signature[i], \"hex\"),\n                Buffer.from(matchedPublicKeys[i], \"hex\")\n              );\n              if (!isSigVerified) {\n                verified = false;\n                break;\n              }\n            }\n          }\n        } else {\n          throw new WalletSignMessageAndVerifyError(\"Failed to get a bitmap\").message;\n        }\n      } else {\n        const currentAccountPublicKey = new HexString(\n          this._account.publicKey\n        );\n        const signature = new HexString(response.signature);\n        verified = nacl.sign.detached.verify(\n          Buffer.from(response.fullMessage),\n          Buffer.from(signature.noPrefix(), \"hex\"),\n          Buffer.from(currentAccountPublicKey.noPrefix(), \"hex\")\n        );\n      }\n      return verified;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageAndVerifyError(errMsg).message;\n    }\n  }\n};\nexport {\n  NetworkName,\n  WalletCore,\n  WalletReadyState\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}